// <auto-generated />
using System;
using DrillSiteManagementPortal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DrillSiteManagementPortal.Migrations
{
    [DbContext(typeof(DsmContext))]
    partial class DsmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("DrillSiteManagementPortal.Models.DepthReadingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Depth");

                    b.Property<double>("Azimuth");

                    b.Property<double>("Dip");

                    b.Property<long?>("DrillSiteModelId");

                    b.Property<double>("TrustWorthiness");

                    b.HasKey("Id");

                    b.HasIndex("DrillSiteModelId");

                    b.ToTable("DepthReadings");
                });

            modelBuilder.Entity("DrillSiteManagementPortal.Models.DrillConfigModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AzimuthMarginOfError");

                    b.Property<int>("DipMarginOfError");

                    b.Property<int>("NumberOfRecordsToQueryAzimuth");

                    b.Property<int>("NumberOfRecordsToQueryDip");

                    b.HasKey("Id");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("DrillSiteManagementPortal.Models.DrillSiteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("CollarAzimuth");

                    b.Property<double>("CollarDip");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("DrillSites");
                });

            modelBuilder.Entity("DrillSiteManagementPortal.Models.DepthReadingModel", b =>
                {
                    b.HasOne("DrillSiteManagementPortal.Models.DrillSiteModel")
                        .WithMany("DepthReadings")
                        .HasForeignKey("DrillSiteModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
